name: release

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.prep.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get version
      id: prep
      run: |
        # Retrieve annotated tags. Details: https://github.com/actions/checkout/issues/290
        git config --global --add safe.directory $(pwd)
        git fetch --tags --force
        echo ::set-output name=version::$(git describe --match "[0-9].[0-9]*" --tag)
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: WasmEdge on seL4 - ${{ steps.prep.outputs.version }}
        draft: true
        prerelease: true

  create_source_tarball:
    name: Create source tarball
    runs-on: ubuntu-20.04
    needs: create_release
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Propagate version information for tarball
      run: |
        echo $VERSION | tee VERSION
      env:
        VERSION: ${{ needs.create_release.outputs.version }}
    - name: Create source tarball
      run: |
        TEMPDIR=$(mktemp -d)
        SRCDIR="$TEMPDIR/wasmedge-seL4/"
        mkdir -p "$SRCDIR"
        git checkout-index -a --prefix="$SRCDIR"
        cp -v VERSION $SRCDIR
        tar --owner 0 --group 0 -czf "$GITHUB_WORKSPACE/wasmedge-seL4-$VERSION.tar.gz" -C "$TEMPDIR" "wasmedge-seL4"
      env:
        VERSION: ${{ needs.create_release.outputs.version }}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: wasmedge-seL4-${{ needs.create_release.outputs.version }}-src.tar.gz
        path: wasmedge-seL4-${{ needs.create_release.outputs.version }}.tar.gz
    - name: Upload source tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: wasmedge-seL4-${{ needs.create_release.outputs.version }}-src.tar.gz
        asset_path: wasmedge-seL4-${{ needs.create_release.outputs.version }}.tar.gz
        asset_content_type: application/x-gzip

  build_and_upload:
    name: Build and upload artifacts
    runs-on: ubuntu-20.04
    needs: create_release
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install apt-get packages
      run: |
        sudo ACCEPT_EULA=Y apt-get update
        sudo ACCEPT_EULA=Y apt-get upgrade
        sudo ACCEPT_EULA=Y apt-get install git wget sudo zip
    - name: Build
      run: |
        bash ./build.sh
    - name: Create build tarball
      run: |
        tar --owner 0 --group 0 -czvf "wasmedge-seL4-$VERSION-build.tar.gz" -C sel4_wasmedge/build simulate images/
      env:
        VERSION: ${{ needs.create_release.outputs.version }}
    - name: Upload build results
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: wasmedge-seL4-${{ needs.create_release.outputs.version }}-build.tar.gz
        asset_path: wasmedge-seL4-${{ needs.create_release.outputs.version }}-build.tar.gz
        asset_content_type: application/x-gzip
